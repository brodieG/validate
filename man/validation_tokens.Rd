% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/validators.R
\docType{data}
\name{validation_tokens}
\alias{CHR}
\alias{CHR.1}
\alias{CPX}
\alias{CPX.1}
\alias{GT.0}
\alias{GTE.0}
\alias{INT}
\alias{INT.1.NEG}
\alias{INT.1.NEG.STR}
\alias{INT.1.POS}
\alias{INT.1.POS.STR}
\alias{INT.NEG}
\alias{INT.NEG.STR}
\alias{INT.POS}
\alias{INT.POS.STR}
\alias{LGL}
\alias{LGL.1}
\alias{LT.0}
\alias{LTE.0}
\alias{NO.INF}
\alias{NO.NA}
\alias{NUM}
\alias{NUM.1}
\alias{NUM.1.NEG}
\alias{NUM.1.POS}
\alias{NUM.NEG}
\alias{NUM.POS}
\alias{validation_tokens}
\title{Predefined Validation Tokens}
\format{\preformatted{length 2 !is.na(.)
 - attr(*, "err.msg")= chr "not contain NAs, but does"
}}
\usage{
NO.NA

NO.INF

GTE.0

LTE.0

GT.0

LT.0

INT.1.POS

INT.1.NEG

INT.1.POS.STR

INT.1.NEG.STR

INT

INT.POS

INT.NEG

INT.POS.STR

INT.NEG.STR

NUM.1

NUM.1.POS

NUM.1.NEG

NUM

NUM.POS

NUM.NEG

CHR.1

CHR

CPX

CPX.1

LGL

LGL.1
}
\description{
Commonly used tokens that can be used as part of validation expressions.
}
\details{
In particular, we predefine several templates useful for atomic vectors. For
example, \code{INT.1.POS.STR} will validate:
\itemize{
  \item \code{INT}: integer-like
  \item \code{1}: length 1
  \item \code{POS.STR}: strictly positive (i.e. > zero)
}
whereas \code{INT} will validate any integer like vector of any length.

Every one of the token validators documented here implicitly disallows NAs,
and for numerics also disallows infinite values. If you wish to allow NAs or
infinite values just use \code{integer(1L)}.

Keep in mind these validators are just language objects so you can just as
easily create your own by quoting an R expression or by using
\code{\link{mk_val_token}} if you also want to attach a custom error message.
}
\keyword{datasets}

